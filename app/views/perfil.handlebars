<section class='h-[85vh]'>
    <div class="mx-auto mb-8 uppercase container">
        <h2
            class='mt-10 text-start text-2xl leading-9 tracking-tight text-gray-900'
        >Perfil de: <span class="font-bold ">{{user.email}}</span> </h2>
    </div>
	<div
		class='container mx-auto border-2 rounded-xl shadow-xl grid grid-cols-5 overflow-hidden'
	>
		<div class='col-span-2'>

			<div class='h-full flex flex-col justify-center px-6 py-12 lg:px-8'>
				<div class='sm:mx-auto sm:w-full sm:max-w-sm'>
					<img class='h-10 w-auto' src='../../logo.png' alt='TuBootcamp' />
				</div>

				<div class='mt-10 sm:mx-auto sm:w-full sm:max-w-sm'>
					<form class='space-y-6' action='#' method='POST' id='updateForm'>
						<div>
							<label
								for='firstName'
								class='block text-sm font-medium leading-6 text-gray-900'
							>Nombre</label>
							<div class='mt-2'>
								<input
									id='inputNombre'
									name='firstName'
									type='text' value="{{user.firstName}}"
									required
									class='block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6'
								/>
							</div>
						</div>
						<div>
							<label
								for='lastName'
								class='block text-sm font-medium leading-6 text-gray-900'
							>Apellido</label>
							<div class='mt-2'>
								<input
									id='inputApellido' value="{{user.lastName}}"
									name='lastName'
									type='text'
									required
									class='block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6'
								/>
							</div>
						</div>
					
						<div class="grid grid-cols-4">
							<button
								type='submit'
								class='col-span-2 flex justify-center rounded-md bg-indigo-600 px-3 py-1.5 me-2 my-2 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600'
							>Actualizar datos</button>
							<button
								id="btnDelete"
								class='col-span-2 flex justify-center rounded-md bg-red-800 px-3 py-1.5 ms-2 my-2 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-red-600 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-red-800'
							>Eliminar usuario</button>
						</div>
					</form>
				</div>
			</div>
		</div>
		<div class='col-span-3'>
			<div class=''>

				<img
					class='w-full'
					src='https://images.unsplash.com/photo-1551434678-e076c223a692?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80'
					alt=''
				/>
			</div>
		</div>
	</div>
</section>
<script>
    const updateForm = document.getElementById('updateForm');
    
    let userId = {{user.id}}
    // Actualizar datos
    updateForm.addEventListener('submit', (event) => {
            event.preventDefault();
            let myHeaders = new Headers();
            myHeaders.append("Content-Type", "application/json");
            myHeaders.append("Authorization", `Bearer ${token}`);

            let raw = JSON.stringify({
                "firstName": inputNombre.value,
                "lastName": inputApellido.value
            });

            let requestOptions = {
                method: 'PUT',
                headers: myHeaders,
                body: raw,
                redirect: 'follow'
            };

            fetch(`/api/v1/user/id/${userId}`, requestOptions)
                .then(response => response.json())
                .then(result => {
                    if (result.code == 200) {
                        alert(result.message)
                        loadData()
                    } else {
                        alert(result.message)
                    }
                })
                .catch(error => console.log('error', error));
    })

    const loadData = () => {
        var myHeaders = new Headers();
        myHeaders.append("Authorization", `Bearer ${token}`);

        var requestOptions = {
            method: 'GET',
            headers: myHeaders,
            redirect: 'follow'
        };

        fetch(`/api/v1/user/id/${userId}`, requestOptions)
            .then(response => response.json())
            .then(result => {
                let user = result.data
                inputNombre.value = user.firstName;
                inputApellido.value = user.lastName
            })
            .catch(error => console.log('error', error));
    };
    
    btnDelete.addEventListener('click',(event)=>{
        event.preventDefault();
        if(confirm('¿Seguro que desea eliminar el usuario?')){
            var myHeaders = new Headers();
            myHeaders.append("Authorization", `Bearer ${token}`);

            var requestOptions = {
            method: 'DELETE',
            headers: myHeaders,
            redirect: 'follow'
            };

            fetch(`/api/v1/user/id/${userId}`, requestOptions)
            .then(response => response.json())
            .then(result => {
                localStorage.removeItem('token');
                alert('Usuario eliminado con éxito')
                location.href='/'
            })
            .catch(error => console.log('error', error));
        }
    })
    
</script>